swagger: "2.0"
info:
  title: Mark3d service
  description: >
    Здесь можно **маркдауном** писать дополнительное описание.<br />
  version: 1.0.0
schemes:
  - https
host: filemarket.xyz
basePath: /api
paths:
  /collections/{address}:
    get:
      tags:
        - collections
      description: Получение коллекции по адресу
      produces:
        - application/json
      responses:
        "200":
          description: Коллекция
          schema:
            $ref: "#/definitions/Collection"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
  /collections/full/{address}:
    get:
      tags:
        - collections
      description: Получение коллекции со всем ее токенами по адресу
      produces:
        - application/json
      responses:
        "200":
          description: Коллекция
          schema:
            $ref: "#/definitions/CollectionData"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastTokenId
          in: query
          description: Id последнего токена на прошлой странице. Если пустая строка, то вернет первую страницу
          type: string
          default: ""
          pattern: "^[0-9]*$"
        - name: limit
          in: query
          description: Максимальное число токенов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 1
          maximum: 100
  /tokens/{address}:
    get:
      tags:
        - tokens
      description: Получение списка токенов и коллекций пользователя с раздельной пагинацией
      produces:
        - application/json
      responses:
        "200":
          description: Токены
          schema:
            $ref: "#/definitions/TokensResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastCollectionAddress
          in: query
          description: Адрес последней коллекции.
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: collectionLimit
          in: query
          description: Максимальное число коллекций, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
        - name: lastTokenId
          in: query
          description: Id последнего токена на прошлой странице. Если пустая строка, то вернет первую страницу
          type: string
          default: ""
          pattern: "^[0-9]*$"
        - name: lastTokenCollectionAddress
          in: query
          description: Адрес последней коллекции последнего токена.
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: tokenLimit
          in: query
          description: Максимальное число токенов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
  /tokens/{collection}/{id}:
    get:
      tags:
        - tokens
      description: Получение токена по адресу коллекции и id
      produces:
        - application/json
      responses:
        "200":
          description: Токен
          schema:
            $ref: "#/definitions/Token"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: collection
          in: path
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: id
          in: path
          required: true
          type: string
          pattern: "^[0-9]+$"
  /tokens/{collection}/{id}/encrypted_password:
    get:
      tags:
        - tokens
      description: Получение зашифрованного пароля из последней передачи токена по адресу коллекции и id
      produces:
        - application/json
      responses:
        "200":
          description: Зашифрованный пароль
          schema:
            $ref: "#/definitions/EncryptedPasswordResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: collection
          in: path
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: id
          in: path
          required: true
          type: string
          pattern: "^[0-9]+$"
  /tokens/by_collection/{address}:
    get:
      tags:
        - tokens
      description: Получение токенов по адресу коллекции
      produces:
        - application/json
      responses:
        "200":
          description: Токены
          schema:
            type: array
            items:
              $ref: "#/definitions/Token"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastTokenId
          in: query
          description: Id последнего токена на прошлой странице. Если пустая строка, то вернет первую страницу
          type: string
          default: ""
          pattern: "^[0-9]*$"
        - name: limit
          in: query
          description: Максимальное число токенов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 1
          maximum: 100
  /transfers/{address}:
    get:
      tags:
        - transfers
      description: Получение списка трансферов пользователя
      produces:
        - application/json
      responses:
        "200":
          description: Трансферы
          schema:
            $ref: "#/definitions/TransfersResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastIncomingTransferId
          in: query
          description: Id последнего входящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: incomingLimit
          in: query
          description: Максимальное число входящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
        - name: lastOutgoingTransferId
          in: query
          description: Id последнего исходящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: outgoingLimit
          in: query
          description: Максимальное число исходящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
  /transfers/{address}/{id}:
    get:
      tags:
        - transfers
      description: Получение **активного** трансфера по адресу коллекции и id токена
      produces:
        - application/json
      responses:
        "200":
          description: Трансфер
          schema:
            $ref: "#/definitions/Transfer"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: id
          in: path
          required: true
          type: string
          pattern: "^[0-9]+$"
  /transfers_history/{address}:
    get:
      tags:
        - transfers
      description: Получение истории трансферов пользователя
      produces:
        - application/json
      responses:
        "200":
          description: Трансферы
          schema:
            $ref: "#/definitions/TransfersResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastIncomingTransferId
          in: query
          description: Id последнего входящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: incomingLimit
          in: query
          description: Максимальное число входящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
        - name: lastOutgoingTransferId
          in: query
          description: Id последнего исходящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: outgoingLimit
          in: query
          description: Максимальное число исходящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
  /v2/transfers/{address}:
    get:
      tags:
        - transfers
      description: Получение списка трансферов пользователя
      produces:
        - application/json
      responses:
        "200":
          description: Трансферы
          schema:
            $ref: "#/definitions/TransfersResponseV2"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastIncomingTransferId
          in: query
          description: Id последнего входящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: incomingLimit
          in: query
          description: Максимальное число входящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
        - name: lastOutgoingTransferId
          in: query
          description: Id последнего исходящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: outgoingLimit
          in: query
          description: Максимальное число исходящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
  /v2/transfers/{address}/{id}:
    get:
      tags:
        - transfers
      description: Получение **активного** трансфера по адресу коллекции и id токена
      produces:
        - application/json
      responses:
        "200":
          description: Трансфер
          schema:
            $ref: "#/definitions/TransferWithData"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: id
          in: path
          required: true
          type: string
          pattern: "^[0-9]+$"
  /v2/transfers_history/{address}:
    get:
      tags:
        - transfers
      description: Получение истории трансферов пользователя
      produces:
        - application/json
      responses:
        "200":
          description: Трансферы
          schema:
            $ref: "#/definitions/TransfersResponseV2"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: lastIncomingTransferId
          in: query
          description: Id последнего входящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: incomingLimit
          in: query
          description: Максимальное число входящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
        - name: lastOutgoingTransferId
          in: query
          description: Id последнего исходящего трансфера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: outgoingLimit
          in: query
          description: Максимальное число исходящих трансферов, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 0
          maximum: 100
  /orders/all_active:
    get:
      tags:
        - orders
      description: Получение списка всех активных ордеров с информацией о токенах
      produces:
        - application/json
      responses:
        200:
          description: Список ордеров
          schema:
            type: array
            items:
              $ref: "#/definitions/OrderWithToken"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: lastOrderId
          in: query
          description: Id последнего ордера на прошлой странице. Если пустая строка, то вернет первую страницу
          type: integer
          format: int64
        - name: limit
          in: query
          description: Максимальное число ордеров, которое вернется на этой странице.
          type: integer
          format: int
          default: 10
          minimum: 1
          maximum: 100
  /orders/{address}:
    get:
      tags:
        - orders
      description: Получение списка активных ордеров
      produces:
        - application/json
      responses:
        "200":
          description: Ордера
          schema:
            $ref: "#/definitions/OrdersResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
  /orders/{address}/{id}:
    get:
      tags:
        - orders
      description: Получение **активного** ордера по адресу коллекции и id токена
      produces:
        - application/json
      responses:
        "200":
          description: Ордер
          schema:
            $ref: "#/definitions/Order"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
        - name: id
          in: path
          required: true
          type: string
          pattern: "^[0-9]+$"
  /orders_history/{address}:
    get:
      tags:
        - orders
      description: Получение истории ордеров
      produces:
        - application/json
      responses:
        "200":
          description: Ордера
          schema:
            $ref: "#/definitions/OrdersResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: address
          in: path
          description: Адрес аккаунта
          required: true
          type: string
          pattern: "0x[0-9a-f-A-F]{40}"
  /healthcheck:
    get:
      description: Возвращает статус здоровья сервиса
      produces:
        - application/json
      responses:
        "200":
          description: Status
          schema:
            $ref: "#/definitions/HealthStatusResponse"
        default:
          description: Ошибка
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  ErrorResponse:
    type: object
    description: Типовая ошибка
    properties:
      code:
        type: integer
        description: Код ошибки
      message:
        type: string
        description: Сообщение ошибки
      detail:
        type: string
        description: Дополнительные детали
  EncryptedPasswordResponse:
    type: object
    description: Ответ на запрос зашифрованного пароля из последней передачи токена
    properties:
      dealNumber:
        type: string
        description: Номер последнего трансфера токена
      encryptedPassword:
        type: string
        description: Зашифрованный пароль из последней передачи токена
  TokensResponse:
    type: object
    description: Ответ на запрос токенов пользователя
    properties:
      collections:
        type: array
        description: Коллекции пользователя
        items:
          $ref: "#/definitions/Collection"
      tokens:
        type: array
        description: Токены пользователя
        items:
          $ref: "#/definitions/Token"
  TransfersResponse:
    type: object
    description: Ответ на запрос трансферов токенов от пользователя
    properties:
      incoming:
        type: array
        description: Входящие трансферы
        items:
          $ref: "#/definitions/Transfer"
      outgoing:
        type: array
        description: Исходящие трансферы
        items:
          $ref: "#/definitions/Transfer"
  TransfersResponseV2:
    type: object
    description: Ответ на запрос трансферов токенов от пользователя
    properties:
      incoming:
        type: array
        description: Входящие трансферы
        items:
          $ref: "#/definitions/TransferWithData"
      outgoing:
        type: array
        description: Исходящие трансферы
        items:
          $ref: "#/definitions/TransferWithData"
  OrdersResponse:
    type: object
    description: Ответ на запрос ордеров
    properties:
      incoming:
        type: array
        description: Входящие ордера (где пользователь - получатель)
        items:
          $ref: "#/definitions/Order"
      outgoing:
        type: array
        description: Исходящие ордера (где пользователь - продавец)
        items:
          $ref: "#/definitions/Order"
  OrderWithToken:
    type: object
    description: Ордер с токеном
    properties:
      order:
        $ref: "#/definitions/Order"
      token:
        $ref: "#/definitions/Token"
      transfer:
        $ref: "#/definitions/Transfer"
  CollectionData:
    type: object
    description: Коллекция со всеми токенами
    properties:
      collection:
        $ref: "#/definitions/Collection"
      tokens:
        type: array
        items:
          $ref: "#/definitions/Token"
  Collection:
    type: object
    description: Коллекция
    properties:
      address:
        type: string
        description: Адрес контракта коллекции
        pattern: "0x[0-9a-f-A-F]{40}"
      creator:
        type: string
        description: Создатель коллекции
        pattern: "0x[0-9a-f-A-F]{40}"
      owner:
        type: string
        description: Владелец коллекции
        pattern: "0x[0-9a-f-A-F]{40}"
      tokenId:
        type: string
        description: Id Access токена
        pattern: "^[0-9]+$"
      metaUri:
        type: string
        description: uri метаданных access токена
      name:
        type: string
        description: Имя токена из метаданных
      description:
        type: string
        description: Описание токена из метаданных
      image:
        type: string
        description: Ссылка на пикчу из метаданных
  Token:
    type: object
    description: Токен
    properties:
      collectionAddress:
        type: string
        description: Адрес коллекции
        pattern: "0x[0-9a-f-A-F]{40}"
      collectionName:
        type: string
        description: Имя коллекции
      tokenId:
        type: string
        description: Id токена
        pattern: "^[0-9]+$"
      owner:
        type: string
        description: Владелец
        pattern: "0x[0-9a-f-A-F]{40}"
      creator:
        type: string
        description: Создатель
        pattern: "0x[0-9a-f-A-F]{40}"
      metaUri:
        type: string
        description: uri метаданных токена
      name:
        type: string
        description: Метаданные - Имя токена из метаданных
      description:
        type: string
        description: Метаданные - Описание токена из метаданных
      image:
        type: string
        description: Метаданные - Ссылка на пикчу из метаданных
      externalLink:
        type: string
        description: не интернал не амнистия
      hiddenFile:
        type: string
        description: Метаданные - Ссылка на зашифрованный файл из метаданных
      license:
        type: string
      licenseUrl:
        type: string
      mintTxHash:
        type: string
        description: Хэш транзакции минта
      mintTxTimestamp:
        type: number
        description: Время транзакции минта
        format: uint64
      hiddenFileMeta:
        $ref: "#/definitions/HiddenFileMetaData"
      categories:
        type: array
        description: Метаданные - Категории
        items:
          type: string
      subcategories:
        type: array
        description: Метаданные - Подкатегории
        items:
          type: string
      tags:
        type: array
        items:
          type: string
        description: Метаданные - Тэги
      properties:
        type: array
        items:
          $ref: "#/definitions/MetadataProperty"
        description: Метаданные - Аттрибуты
      rankings:
        type: array
        items:
          $ref: "#/definitions/MetadataProperty"
        description: Метаданные - Ранкинги
      stats:
        type: array
        items:
          $ref: "#/definitions/MetadataProperty"
        description: Метаданные - Статы
      pendingTransferId:
        type: integer
        format: int64
        description: id трансфера, находящегося в процессе
      pendingOrderId:
        type: integer
        format: int64
        description: id ордера, находящегося в процессе
  TransferWithData:
    type: object
    description: Данные трансфера (Трансфер, токен, ордер если есть)
    properties:
      transfer:
        $ref: "#/definitions/Transfer"
      token:
        $ref: "#/definitions/Token"
      order:
        $ref: "#/definitions/Order"
      collection:
        $ref: "#/definitions/Collection"
  Transfer:
    type: object
    description: Трансфер
    properties:
      id:
        type: integer
        description: Id трансфера
        format: int64
      collection:
        type: string
        description: Адрес коллекции
        pattern: "0x[0-9a-f-A-F]{40}"
      tokenId:
        type: string
        description: Id токена
        pattern: "^[0-9]+$"
      from:
        type: string
        description: Отправитель
        pattern: "0x[0-9a-f-A-F]{40}"
      to:
        type: string
        description: Получатель, если уже назначен
        pattern: "0x[0-9a-f-A-F]{40}"
      orderId:
        type: integer
        description: Id ордера, если трансфер создан из-за ордера
        format: int64
      fraudApproved:
        type: boolean
        description:
          true - если факт мошенничества подтвержден (репорт подает всегда только получатель).
          был ли подан репорт, можно выяснить по статусам
      publicKey:
        type: string
        description: публичный ключ (hex)
      encryptedPassword:
        type: string
        description: зашифрованный пароль (hex)
      statuses:
        type: array
        description: Статусы трансфера
        items:
          $ref: "#/definitions/TransferStatusInfo"
      number:
        type: string
        description: Порядковый номер трансфера
  Order:
    type: object
    description: Ордер
    properties:
      id:
        type: integer
        description: Id ордера
        format: int64
      transferId:
        type: integer
        description: Id трансфера
        format: int64
      price:
        type: string
        description: Цена
        pattern: "^[0-9]+$"
      priceUsd:
        type: string
        description: Цена в долларах
        pattern: "^[0-9]+.[0-9]+$"
      statuses:
        type: array
        description: Статусы ордера
        items:
          $ref: "#/definitions/OrderStatusInfo"
  TransferStatusInfo:
    type: object
    description: Изменение статуса трансфера
    properties:
      status:
        $ref: "#/definitions/TransferStatus"
      timestamp:
        type: number
        description: Время установки статуса
        format: int64
      txId:
        type: string
        description: Транзакция, которой был установлен статус
        pattern: "0x[0-9a-f-A-F]{64}"
  TransferStatus:
    description: Статус трансфера <br />
      * `Drafted` - Создан черновик трансфера <br />
      * `Created` - Трансфер инициализирован <br />
      * `PublicKeySet` - Сохранен публичный ключ получателя <br />
      * `PasswordSet` - Сохранен зашифрованный пароль <br />
      * `FraudReported` - Доложено мошенничество <br />
      * `Finished` - Трансфер завершен <br />
      * `Cancelled` - Трансфер отменен
    type: string
    enum:
      - Drafted
      - Created
      - PublicKeySet
      - PasswordSet
      - FraudReported
      - Finished
      - Cancelled
  OrderStatusInfo:
    type: object
    description: Изменение статуса ордера
    properties:
      status:
        $ref: "#/definitions/OrderStatus"
      timestamp:
        type: number
        description: Время установки статуса
        format: int64
      txId:
        type: string
        description: Транзакция, которой был установлен статус
        pattern: "0x[0-9a-f-A-F]{64}"
  OrderStatus:
    description: Статус ордера <br />
      * `Created` - ордер создан <br />
      * `Fulfilled` - средства внесены покупателем <br />
      * `Finished` - ордер завершен успешно <br />
      * `FraudApproved` - доказано мошенничество и ордер отменен <br />
      * `Cancelled` - ордер отменен
    type: string
    enum:
      - Created
      - Fulfilled
      - Finished
      - FraudApproved
      - Cancelled
  HealthStatusResponse:
    type: object
    description: Респонс на healthcheck
    properties:
      status:
        $ref: "#/definitions/HealthStatus"
      blockBacklog:
        type: number
        description: Насколько lastBlock в индексере отстает от head block'а на бч
        format: int
  HealthStatus:
    description: Статус здоровья индексера
    type: string
    enum:
      - Healthy
      - Unhealthy
  MetadataProperty:
    type: object
    description: Структура для свойств в метаданных
    properties:
      traitType:
        type: string
        description: Название свойства
      displayType:
        type: string
        description: Тип данных значения
      value:
        type: string
        description: Значение свойства
      max_value:
        type: string
      min_value:
        type: string
      traitValueCount:
        type: integer
        description: Количество таких же value в заданном trait_type
      traitTotal:
        type: integer
        description: Общее количество записей с таким trait_type
  HiddenFileMetaData:
    type: object
    description: Метаданные скрытого файла
    properties:
      name:
        type: string
        description: Имя файла
      type:
        type: string
        description: Тип файла
      size:
        type: number
        format: int64
        description: Размер данных
tags:
  - name: tokens
  - name: transfers
  - name: orders
